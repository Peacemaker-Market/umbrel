version: '3'
networks:
  production:
services:
  postgres:
    image: postgres:13.5-alpine
    # This needs to run as root for migrations to succeed
    # user: "1000:1000"
    restart: on-failure
    stop_grace_period: 1m
    environment:
        POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
        -  ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    networks:
      - production
  redis:
    image: redis:4.0-alpine
    command: redis-server
    restart: on-failure
    networks:
      - production
    volumes:
      -  ${APP_DATA_DIR}/data/redis:/var/shared/redis
  worker:
    image: dakhodl/peacemaker-umbrel:v0.3.7@sha256:ca01944e1b128a7a1a3f391ed3be675a03fed2c6272586ebd7cdc95dd7b9808d
    networks:
      - production
    stdin_open: true
    restart: on-failure
    tty: true
    command: sidekiq
    environment:
      RAILS_ENV: production
      REDIS_URL_SIDEKIQ: "redis://redis:6379/1"
      SOCKS_PROXY_URL: "${TOR_PROXY_IP}:${TOR_PROXY_PORT}"
      P2P_SERVICE_ONION: $PEACEMAKER_P2P_HIDDEN_SERVICE
    depends_on:
      - redis
      - web
    volumes:
      ${APP_DATA_DIR}/data/keys:/var/app/keys
  web:
    image: dakhodl/peacemaker-umbrel:v0.3.7@sha256:ca01944e1b128a7a1a3f391ed3be675a03fed2c6272586ebd7cdc95dd7b9808d
    networks:
      - production
    ports:
      - 7777:3000
    stdin_open: true
    restart: on-failure
    tty: true
    entrypoint: umbrel-entrypoint.sh
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    environment:
      RAILS_ENV: production
      REDIS_URL_SIDEKIQ: "redis://redis:6379/1"
      WEB_PASSWORD: $APP_PASSWORD
      WEB_USERNAME: 'admin'
      SOCKS_PROXY_URL: "${TOR_PROXY_IP}:${TOR_PROXY_PORT}"
      APP_ONION: $APP_HIDDEN_SERVICE
      APP_DOMAIN: $APP_DOMAIN
      P2P_SERVICE_ONION: $PEACEMAKER_P2P_HIDDEN_SERVICE
    depends_on:
      - redis
      - postgres
    volumes:
      ${APP_DATA_DIR}/data/keys:/var/app/keys
